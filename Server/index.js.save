
var app = require('express')();
var http = require('http').Server(app);
var io = require('socket.io')(http);
var bodyParser = require('body-parser')
app.use( bodyParser.json() );       // to support JSON-encoded bodies
app.use(bodyParser.urlencoded({     // to support URL-encoded bodies
  extended: false
})); 

// DataBase 
var mysql = require("mysql");
var con = mysql.createConnection({
  host: "localhost",
  user: "root",
  password: "kchatadmin",
  database: "kchat"
});
con.connect(function(err){
  if(err){
    console.log('Error connecting to Db');
    return;
  }
  console.log('Connection established');
});

// Validating user credentials with the database
app.post('/login', function(req, res) {

	var queryString = 'SELECT * FROM Users WHERE username = ' + 
                   con.escape(req.body.username) + ' AND password = ' + 
                   con.escape(req.body.password) ;

    con.query(queryString, function(err, rows, fields) {
	    if (err) { 
	    	throw err; 
	    	res.end('fail');
	    }
	 	if (rows.length == 1) {
	 		res.json(rows[0]);
	 	} else {
			res.json({ status: 'failed' });
		}
	});
});

// Inserting a new user in the database
app.post('/register', function(req, res) {

	var queryString = "INSERT INTO Users (`name`, `email`, `username`, `password`, `phone_number`, `session`) VALUES (" + 
						con.escape(req.body.fullName) + ", " + con.escape(req.body.email) + ", "+ con.escape(req.body.username) + 
						", " + con.escape(req.body.pwd) + ", " + con.escape(req.body.phoneNo) + ", '1')";
	
    con.query(queryString, function(err, rows, fields) {
	    if (err) {
	    	if (err.code == 'ER_DUP_ENTRY') {
	    		res.end('duplicate');
	    	}
	    } else if (rows != null && rows.insertId > 0) {
	    	res.end('success ' + rows.insertId);
	    } else {
	    	res.end('fail');
	    }
	});
});

// Initial code
app.get('/', function(req, res){
 res.sendFile(__dirname + '/index.html');
});

// -------- I commented this, as it is a duplicate of what is above. If needed, maybe change the name to "login2"?
// -------- Also, the one from above works well on iOS. Does it not on Android?  ------ Tudor Z.
// Authenticate user
// app.post('/login', function(req, res) {

// 	var queryString = 'SELECT * FROM Users WHERE username = ' + 
//                    con.escape(req.body.username) + ' AND password = ' + 
//                    con.escape(req.body.password) ;

//     con.query(queryString, function(err, rows, fields) {
// 	    if (err) { 
// 	    	throw err;
// 	    	res.end('fail');
// 	    }

// 	 	if (rows.length == 1) {
// 			res.end('success');
// 	 	} else {
// 			res.end('fail');
// 		}
// 	});
// });

// Change password
app.post('/changePass', function(req, res) {

	var queryString = 'UPDATE Users SET password = ' + con.escape(req.body.newPassword) +
						' WHERE Users.username = ' + con.escape(req.body.username) +
						' AND Users.password = ' + con.escape(req.body.password) + ';';

    con.query(queryString, function(err, rows, fields) {
	    if (err) {
    		res.end('fail');
	    } else if (rows != null && rows.affectedRows > 0) {
	    	res.end('success');
	    } else if (rows != null && rows.affectedRows == 0) {
	    	res.end('invalid');
	    } else {
	    	res.end('fail');
	    }
	});
});

// Handler for contact list request
app.post('/contacts', function(req, res) {

	var queryString = 'SELECT contact_id, CASE invite WHEN 1 THEN 1 ELSE 0 END as request, timestmp, Users.* ' + 
						'FROM Contacts JOIN Users ON Users.user_id = Contacts.added_contact_id ' + 
						'WHERE owner_id = ' + con.escape(req.body.userId) + ' UNION ' +
						'SELECT contact_id, CASE invite WHEN 1 THEN 2 ELSE 0 END as request, timestmp, Users.* ' + 
						'FROM Contacts JOIN Users ON Users.user_id = Contacts.owner_id ' +
						'WHERE added_contact_id = ' + con.escape(req.body.userId) + ';';

    con.query(queryString, function(err, rows, fields) {
	    if (err) { 
	    	throw err;
	    	res.end('fail');
	    } else {
	 		res.json(rows);
	    }
			// res.json({ status: 'failed' });
	});
});

// Android test
app.post('/test', function(req, res) {
   var user_name = req.body.username;
   var password = req.body.password;
   console.log(user_name + ' ' + password);
   res.send(user_name + ' ' + password);
});

// Initial code
app.get('/', function(req, res){
 res.sendFile(__dirname + '/index.html');
});

//
//socket.io stuff

// usernames which are currently connected to the chat
var usernames = {};

// rooms which are currently available in chat
var rooms = ['room1','room2','room3'];

io.on('connection', function(socket){
// console.log('TudorZg connected!!!'); <<<------REMOVED AS IT WORKS 
 
 socket.on('disconnect', function(){
   console.log('user disconnected');
 });

 socket.on('chat message', function(msg){
   console.log('message: ' + msg);
   io.emit('chat message', msg);
   io.emit('chat message', 'function from server chat message');
 });

// when the client emits 'adduser', this listens and executes
	socket.on('adduser', function(username){
		// store the username in the socket session for this client
		socket.username = username;
		// store the room name in the socket session for this client
		socket.room = 'room1';
		// add the client's username to the global list
		usernames[username] = username;
		// send client to room 1
		socket.join('room1');
		// echo to client they've connected
		socket.emit('updatechat', 'SERVER', 'you have connected to room1');
		// echo to room 1 that a person has connected to their room
		socket.broadcast.to('room1').emit('updatechat', 'SERVER', username + ' has connected to this room');
		socket.emit('updaterooms', rooms, 'room1');
});


});

http.listen(3000, function(){
 console.log('listening on *:3000');
});
